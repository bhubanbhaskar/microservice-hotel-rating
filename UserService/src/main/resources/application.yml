server:
  port: 8081
spring:
  config:
    import: optional:configserver:http://localhost:8085
  application:
    name: USER-SERVICE
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: postgres
  jpa:
    hibernate:
      ddl-auto: update
    generate-ddl: true
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
         issuer-uri: https://dev-45924573.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorizationGrantType: client_credentials
            scope: internal
            clientId: ****
            clientSecret: *****
        provider:
          okta:
            issuerUri: https://dev-45924573.okta.com/oauth2/default



resilience4j:
  ratelimiter:
    instances:
      userRateLimiter:
        limitRefreshPeriod: 4s
        limitForPeriod: 5
        timeoutDuration: 0s
  retry:
    instances:
      ratingHotelService:
        maxAttempts: 3
        waitDuration: 5s
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        automaticTransitionFromOpenToHalfOpenEnabled: true
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        waitDurationInOpenState: 5s
        slidingWindowType: COUNT_BASED

management:
  endpoint:
    health:
      show-details: ALWAYS
  endpoints:
    web:
      exposure:
        include: health
  health:
    circuitbreakers:
      enabled: true
okta:
  oauth2:
    issuer: https://dev-45924573.okta.com/oauth2/default
    audience: api://default
    client-id: *******
    client-secret: ******
    scopes: openid, profile, email, offline_access


